name: Deploy UI to GitHub Pages

on:
  pull_request:
    types: [labeled]
  push:
    branches: [feature/ui_gha]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    if: contains(github.event.label.name, 'deploy-ui') || github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Install UI dependencies
        run: |
          cd examples/ui
          yarn install
        
      - name: Debug module resolution
        run: |
          cd examples/ui
          echo "=== Checking SDK module structure ==="
          ls -la node_modules/@vocdoni/davinci-sdk/ || echo "No davinci-sdk directory found"
          echo "=== Checking SDK package.json ==="
          cat node_modules/@vocdoni/davinci-sdk/package.json || echo "No package.json in SDK"
          echo "=== Checking SDK main entry ==="
          ls -la node_modules/@vocdoni/davinci-sdk/dist/ || echo "No dist directory"
          echo "=== Testing Node.js module resolution ==="
          node -e "try { console.log('SDK found:', require.resolve('@vocdoni/davinci-sdk')); } catch(e) { console.log('SDK resolution failed:', e.message); }"
        
      - name: Build with Next.js
        run: |
          cd examples/ui
          yarn build
        env:
          API_URL: ${{ secrets.API_URL }}
          SEPOLIA_RPC: ${{ secrets.SEPOLIA_RPC }}
          ESLINT_NO_DEV_ERRORS: true
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./examples/ui/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
